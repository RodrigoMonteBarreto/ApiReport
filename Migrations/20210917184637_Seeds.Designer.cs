// <auto-generated />
using System;
using ApiFastReport.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiFastReport.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210917184637_Seeds")]
    partial class Seeds
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("ApiFastReport.Entity.CategoriaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 891, DateTimeKind.Utc).AddTicks(8771),
                            Descricao = "Combustivel"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 891, DateTimeKind.Utc).AddTicks(8786),
                            Descricao = "Lubrificantes"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 891, DateTimeKind.Utc).AddTicks(8789),
                            Descricao = "Diversos"
                        });
                });

            modelBuilder.Entity("ApiFastReport.Entity.ClienteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(4302),
                            Email = "sofia@gmail.com",
                            Nome = "Sofia Porto"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(4310),
                            Email = "leticia@gmail.com",
                            Nome = "Leticia Barbosa"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(4312),
                            Email = "bianca@gmail.com",
                            Nome = "Bianca Kushisk"
                        });
                });

            modelBuilder.Entity("ApiFastReport.Entity.EmpresaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 890, DateTimeKind.Utc).AddTicks(2872),
                            Email = "postocidade@gmail.com",
                            Foto = "",
                            Nome = "Posto de gasolina Monte Cidade"
                        });
                });

            modelBuilder.Entity("ApiFastReport.Entity.ProdutoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Ean")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(985),
                            Descricao = "Gasolina Aditivada",
                            Ean = "2007040003594",
                            Preco = 6.01m
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(1382),
                            Descricao = "Gasolina Comum",
                            Ean = "78989877383837",
                            Preco = 5.51m
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(1387),
                            Descricao = "Alcool Comum",
                            Ean = "78945637385703",
                            Preco = 4.47m
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(1391),
                            Descricao = "Alcool Aditivado",
                            Ean = "789456373834321",
                            Preco = 4.89m
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(1393),
                            Descricao = "Diesel",
                            Ean = "78945637382273",
                            Preco = 3.82m
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 2,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(1395),
                            Descricao = "Óleo lubrificante Motor 20w",
                            Ean = "7894563738266033",
                            Preco = 23.50m
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 2,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(1397),
                            Descricao = "Óleo lubrificante Motor 40w",
                            Ean = "7894563738266711",
                            Preco = 26.50m
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 3,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(1399),
                            Descricao = "Água sem gás",
                            Ean = "9874564564720",
                            Preco = 2.00m
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 3,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(1402),
                            Descricao = "Água com gás",
                            Ean = "9874564564721",
                            Preco = 2.40m
                        });
                });

            modelBuilder.Entity("ApiFastReport.Entity.UsuarioEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(2888),
                            Email = "rodrigo@gmail.com",
                            Nome = "Rodrigo Monte"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(2895),
                            Email = "flavia@gmail.com",
                            Nome = "Flávia Monte"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(2897),
                            Email = "marcos@gmail.com",
                            Nome = "Marcos Silva"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(2900),
                            Email = "helena@gmail.com",
                            Nome = "Helena Santos"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(2902),
                            Email = "tiago@gmail.com",
                            Nome = "Tiago Oliveira"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(2904),
                            Email = "jonas@gmail.com",
                            Nome = "Jonas Madureira"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(2906),
                            Email = "maria@gmail.com",
                            Nome = "Maria Joaquina"
                        });
                });

            modelBuilder.Entity("ApiFastReport.Entity.VendaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Totalvenda")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Vendas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClienteId = 2,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(5973),
                            DataVenda = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(5514),
                            Totalvenda = 100.00m
                        },
                        new
                        {
                            Id = 2,
                            ClienteId = 3,
                            CreatedAt = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(6420),
                            DataVenda = new DateTime(2021, 9, 17, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(6418),
                            Totalvenda = 75.00m
                        },
                        new
                        {
                            Id = 3,
                            ClienteId = 1,
                            CreatedAt = new DateTime(2021, 9, 19, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(6543),
                            DataVenda = new DateTime(2021, 9, 19, 18, 46, 36, 892, DateTimeKind.Utc).AddTicks(6424),
                            Totalvenda = 200.00m
                        });
                });

            modelBuilder.Entity("ApiFastReport.Entity.VendaItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TotalProduto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("ValorProduto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("VendaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("VendaId");

                    b.ToTable("VendaItens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProdutoId = 2,
                            Quantidade = 16.63m,
                            TotalProduto = 100.00m,
                            ValorProduto = 6.01m,
                            VendaId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProdutoId = 1,
                            Quantidade = 9.07m,
                            TotalProduto = 50.00m,
                            ValorProduto = 5.51m,
                            VendaId = 2
                        },
                        new
                        {
                            Id = 3,
                            ProdutoId = 9,
                            Quantidade = 10.50m,
                            TotalProduto = 25.00m,
                            ValorProduto = 2.40m,
                            VendaId = 2
                        },
                        new
                        {
                            Id = 4,
                            ProdutoId = 5,
                            Quantidade = 52.34m,
                            TotalProduto = 200.00m,
                            ValorProduto = 3.82m,
                            VendaId = 3
                        });
                });

            modelBuilder.Entity("ApiFastReport.Entity.ProdutoEntity", b =>
                {
                    b.HasOne("ApiFastReport.Entity.CategoriaEntity", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ApiFastReport.Entity.VendaEntity", b =>
                {
                    b.HasOne("ApiFastReport.Entity.ClienteEntity", "Cliente")
                        .WithMany("Vendas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiFastReport.Entity.VendaItemEntity", b =>
                {
                    b.HasOne("ApiFastReport.Entity.ProdutoEntity", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiFastReport.Entity.VendaEntity", "Venda")
                        .WithMany("VendaItem")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("ApiFastReport.Entity.CategoriaEntity", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("ApiFastReport.Entity.ClienteEntity", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("ApiFastReport.Entity.VendaEntity", b =>
                {
                    b.Navigation("VendaItem");
                });
#pragma warning restore 612, 618
        }
    }
}
